#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import psycopg2
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def fix_database():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""

    connection_params = {
        'dbname': "postgres",
        'user': "postgres",
        'password': "2323420",
        'host': "localhost",
        'port': "5432"
    }

    try:
        conn = psycopg2.connect(**connection_params)
        cursor = conn.cursor()
        logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

        # 1. –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø user_id –≤ drafts –Ω–∞ BIGINT
        logger.info("üîÑ –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø user_id –≤ —Ç–∞–±–ª–∏—Ü–µ drafts...")
        cursor.execute("""
        ALTER TABLE drafts ALTER COLUMN user_id TYPE BIGINT
        """)
        logger.info("‚úÖ –¢–∏–ø user_id –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ BIGINT")

        # 2. –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø telegram_id –≤ users –Ω–∞ BIGINT
        logger.info("üîÑ –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø telegram_id –≤ —Ç–∞–±–ª–∏—Ü–µ users...")
        cursor.execute("""
        ALTER TABLE users ALTER COLUMN telegram_id TYPE BIGINT
        """)
        logger.info("‚úÖ –¢–∏–ø telegram_id –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ BIGINT")

        # 3. –£–¥–∞–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        logger.info("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–¥–∞–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á...")
        cursor.execute("""
        ALTER TABLE drafts DROP CONSTRAINT IF EXISTS drafts_user_id_fkey
        """)
        logger.info("‚úÖ –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á —É–¥–∞–ª–µ–Ω")

        conn.commit()
        logger.info("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")

    except psycopg2.Error as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        if conn:
            conn.rollback()
    finally:
        if cursor:
            cursor.close()
        if conn:
            conn.close()
        logger.info("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")


if __name__ == "__main__":
    fix_database()