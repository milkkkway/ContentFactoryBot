from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


def create_login_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—Ö–æ–¥–∞"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–í–æ–π—Ç–∏")],
            [KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")]
        ],
        resize_keyboard=True
    )
    return keyboard


def create_main_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ü–ê–†–ê–ú–ï–¢–†–ê–ú")],
            [KeyboardButton(text="–¢–†–ï–ù–î–´")],
            [KeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫"), KeyboardButton(text="üìÇ –ú–æ–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∏")],
            [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"), KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
        ],
        resize_keyboard=True
    )
    return keyboard


def create_region_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data="region_RU"),
        InlineKeyboardButton(text="üá∫üá∏ –°–®–ê", callback_data="region_US")
    )
    builder.row(
        InlineKeyboardButton(text="üáßüá∑ –ë—Ä–∞–∑–∏–ª–∏—è", callback_data="region_BR"),
        InlineKeyboardButton(text="üáÆüá≥ –ò–Ω–¥–∏—è", callback_data="region_IN")
    )
    builder.row(
        InlineKeyboardButton(text="üáØüáµ –Ø–ø–æ–Ω–∏—è", callback_data="region_JP"),
        InlineKeyboardButton(text="üá∞üá∑ –ö–æ—Ä–µ—è", callback_data="region_KR")
    )
    builder.row(
        InlineKeyboardButton(text="üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è", callback_data="region_DE"),
        InlineKeyboardButton(text="üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è", callback_data="region_FR")
    )
    return builder.as_markup()


def create_channel_navigation_keyboard(current_index: int, total_channels: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞–Ω–∞–ª–∞–º"""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons = []
    if current_index > 0:
        buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π", callback_data=f"prev_channel_{current_index}"))

    buttons.append(InlineKeyboardButton(text="üîç –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data=f"channel_details_{current_index}"))

    if current_index < total_channels - 1:
        buttons.append(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π", callback_data=f"next_channel_{current_index}"))

    builder.row(*buttons)
    return builder.as_markup()


def create_channel_details_keyboard(channel_index: int, total_channels: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –∫–∞–Ω–∞–ª–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    # –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
    builder.row(InlineKeyboardButton(
        text="üîç –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–∏–¥–µ–æ",
        callback_data=f"channel_details_{channel_index}"
    ))

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏
    nav_buttons = []
    if channel_index > 0:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥. –∫–∞–Ω–∞–ª", callback_data=f"prev_channel_{channel_index}"))

    nav_buttons.append(InlineKeyboardButton(text="üìã –ö —Å–ø–∏—Å–∫—É", callback_data="back_to_channels"))

    if channel_index < total_channels - 1:
        nav_buttons.append(InlineKeyboardButton(text="–°–ª–µ–¥. –∫–∞–Ω–∞–ª ‚û°Ô∏è", callback_data=f"next_channel_{channel_index}"))

    builder.row(*nav_buttons)
    return builder.as_markup()


def create_back_to_channels_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥ –∫ –∫–∞–Ω–∞–ª–∞–º'"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞–Ω–∞–ª–∞–º",
        callback_data="back_to_channels"
    ))
    return builder.as_markup()


def create_draft_actions_keyboard(draft_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_draft_{draft_id}"),
        InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_draft_{draft_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="back_to_drafts")
    )

    return builder.as_markup()


def create_drafts_list_keyboard(drafts: list, current_page: int = 0, page_size: int = 5) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–ø–∏—Å–∫–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤"""
    builder = InlineKeyboardBuilder()

    start_idx = current_page * page_size
    end_idx = start_idx + page_size
    current_drafts = drafts[start_idx:end_idx]

    # –ö–Ω–æ–ø–∫–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
    for draft in current_drafts:
        builder.row(
            InlineKeyboardButton(
                text=f"üìÑ {draft['title'][:20]}...",
                callback_data=f"view_draft_{draft['id']}"
            )
        )

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if current_page > 0:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"drafts_page_{current_page - 1}"))

    nav_buttons.append(InlineKeyboardButton(text="üìã –í –º–µ–Ω—é", callback_data="back_to_main"))

    if end_idx < len(drafts):
        nav_buttons.append(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"drafts_page_{current_page + 1}"))

    builder.row(*nav_buttons)

    return builder.as_markup()


def create_cancel_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_draft"))
    return builder.as_markup()


# –î–û–ë–ê–í–õ–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò:

def create_back_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ (–¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return builder.as_markup()


def create_statistics_period_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data="stats_today"),
        InlineKeyboardButton(text="üìÖ –ù–µ–¥–µ–ª—è", callback_data="stats_week")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ú–µ—Å—è—Ü", callback_data="stats_month"),
        InlineKeyboardButton(text="üìÖ –í—Å–µ –≤—Ä–µ–º—è", callback_data="stats_all")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )

    return builder.as_markup()


def create_auth_cancel_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–º–µ–Ω—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_auth"))
    return builder.as_markup()